name: Prepare AutoMQ Cluster

on:
  workflow_dispatch:
    inputs:
      cloud_provider:
        default: aws-cn
        required: true
        type: string
      region:
        default: cn-northwest-1
        required: true
        type: string
      uninstall:
        default: false
        required: true
        type: boolean


jobs:
  prepare_env:
    name: Prepare AWS Environment
    runs-on: ubuntu-latest
    environment:  ${{ inputs.cloud_provider }}
    steps:
      - name: Checkout Benchmark Code
        uses: actions/checkout@v3

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-  

      - name: Build Benchmark Code
        run: |
          mvn clean package -Dlicense.skip=true -Dcheckstyle.skip -DskipTests -Dspotless.check.skip

      - name: Apply Variables and Secrets
        working-directory: driver-automq/deploy/terraform-aws
        ## Set AK/SK and terraform s3 backend info
        run: |
          echo "current path is: $(pwd)"
           ls -l provision-kafka-aws.tf
          sed -i "s/TF_BACKEND_BUCKET/$TF_BACKEND_BUCKET/g" "$TF_FILENAME"
          TF_FILENAME=$TF_FILENAME
          sed -i "s/TF_BACKEND_KEY/$TF_BACKEND_KEY/g" "$TF_FILENAME"
          sed -i "s/TF_BACKEND_REGION/${{ inputs.region }}/g" "$TF_FILENAME"
          sed -i "s/AUTOMQ_ACCESS_KEY/${{ secrets.AUTOMQ_ACCESS_KEY }}/g" "$TF_VAR_FILENAME"
          sed -i "s/AUTOMQ_SECRET_KEY/${{ secrets.AUTOMQ_SECRET_KEY }}/g" "$TF_VAR_FILENAME"
        env:
          TF_BACKEND_BUCKET: ${{ secrets.TF_BACKEND_BUCKET }}
          TF_BACKEND_KEY: ${{ secrets.TF_BACKEND_KEY }}
          TF_FILENAME: ${{ secrets.TF_FILENAME }}
          TF_VAR_FILENAME: ${{ secrets.TF_VAR_FILENAME }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AUTOMQ_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AUTOMQ_SECRET_KEY }}
          aws-region: ${{ inputs.region }}

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/automq_aws
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/automq_aws.pub
          chmod 600 ~/.ssh/automq_aws
          chmod 644 ~/.ssh/automq_aws.pub

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize terraform
        working-directory: driver-automq/deploy/terraform-aws
        run: terraform init

      - name: Uninstall Cloud Infra
        working-directory: driver-automq/deploy/terraform-aws
        if: ${{ inputs.uninstall }}
        run: terraform destroy --auto-approve -var-file terraform-aws-cn.tfvars


      - name: Terraform Plan
        working-directory: driver-automq/deploy/terraform-aws
        run: terraform plan -var-file terraform-aws-cn.tfvars


      - name: Apply terraform
        working-directory: driver-automq/deploy/terraform-aws
        if: ${{ !inputs.uninstall }}
        run: terraform apply --auto-approve -var-file terraform-aws-cn.tfvars

      - name: Install python
        uses: actions/setup-python@v4
        if: ${{ !inputs.uninstall }}
        with:
          python-version: '3.10'

      - name: Install ansible
        if: ${{ !inputs.uninstall }}
        run: |
          python -m pip install --upgrade pip
          python -m pip install --user ansible
          python -m pip install --user jmespath

      - name: Download Latest AutoMQ TGZ File
        if: ${{ !inputs.uninstall }}
        run: |
          curl -L https://download.automq.com/community_edition/artifacts/automq-kafka-latest.tgz -o /tmp/automq-kafka-latest.tgz

      - name: Install AutoMQ Cluster
        working-directory: driver-automq/deploy
        if: ${{ !inputs.uninstall }}
        run: |
          ansible-playbook deploy.yaml -i terraform-aws/hosts.ini